namespace Spice86.Core.Emulator.CPU.CfgCpu;

using Spice86.Core.Emulator.CPU.CfgCpu.ControlFlowGraph;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AdcAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AdcRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AdcRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AddAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AddRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AddRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AndAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AndRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.AndRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.CmpAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.CmpRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.CmpRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.DecReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.Grp1;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.Grp45;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.IncReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.JmpNearImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.MovMoffsAcc;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.MovRegImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.MovRmImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.MovRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.OrAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.OrRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.OrRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.PopReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.PushPopF;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.PushReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SbbAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SbbRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SbbRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SubAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SubRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.SubRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.XorAccImm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.XorRegRm;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.XorRmReg;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.SelfModifying;

public interface ICfgNodeVisitor {
    public ICfgNode? NextNode { get; }
    public void Accept(AddRmReg8 instruction);
    public void Accept(AddRmReg16 instruction);
    public void Accept(AddRmReg32 instruction);
    public void Accept(AddRegRm8 instruction);
    public void Accept(AddRegRm16 instruction);
    public void Accept(AddRegRm32 instruction);
    public void Accept(AddAccImm8 instruction);
    public void Accept(AddAccImm16 instruction);
    public void Accept(AddAccImm32 instruction);
    public void Accept(OrRmReg8 instruction);
    public void Accept(OrRmReg32 instruction);
    public void Accept(OrRmReg16 instruction);
    public void Accept(OrRegRm8 instruction);
    public void Accept(OrRegRm32 instruction);
    public void Accept(OrRegRm16 instruction);
    public void Accept(OrAccImm8 instruction);
    public void Accept(OrAccImm32 instruction);
    public void Accept(OrAccImm16 instruction);
    public void Accept(AdcRmReg8 instruction);
    public void Accept(AdcRmReg32 instruction);
    public void Accept(AdcRmReg16 instruction);
    public void Accept(AdcRegRm8 instruction);
    public void Accept(AdcRegRm32 instruction);
    public void Accept(AdcRegRm16 instruction);
    public void Accept(AdcAccImm8 instruction);
    public void Accept(AdcAccImm32 instruction);
    public void Accept(AdcAccImm16 instruction);
    public void Accept(SbbRmReg8 instruction);
    public void Accept(SbbRmReg32 instruction);
    public void Accept(SbbRmReg16 instruction);
    public void Accept(SbbRegRm8 instruction);
    public void Accept(SbbRegRm32 instruction);
    public void Accept(SbbRegRm16 instruction);
    public void Accept(SbbAccImm8 instruction);
    public void Accept(SbbAccImm32 instruction);
    public void Accept(SbbAccImm16 instruction);
    public void Accept(AndRmReg8 instruction);
    public void Accept(AndRmReg32 instruction);
    public void Accept(AndRmReg16 instruction);
    public void Accept(AndRegRm8 instruction);
    public void Accept(AndRegRm32 instruction);
    public void Accept(AndRegRm16 instruction);
    public void Accept(AndAccImm8 instruction);
    public void Accept(AndAccImm32 instruction);
    public void Accept(AndAccImm16 instruction);
    public void Accept(SubRmReg8 instruction);
    public void Accept(SubRmReg32 instruction);
    public void Accept(SubRmReg16 instruction);
    public void Accept(SubRegRm8 instruction);
    public void Accept(SubRegRm32 instruction);
    public void Accept(SubRegRm16 instruction);
    public void Accept(SubAccImm8 instruction);
    public void Accept(SubAccImm32 instruction);
    public void Accept(SubAccImm16 instruction);
    public void Accept(XorRmReg8 instruction);
    public void Accept(XorRmReg32 instruction);
    public void Accept(XorRmReg16 instruction);
    public void Accept(XorRegRm8 instruction);
    public void Accept(XorRegRm32 instruction);
    public void Accept(XorRegRm16 instruction);
    public void Accept(XorAccImm8 instruction);
    public void Accept(XorAccImm32 instruction);
    public void Accept(XorAccImm16 instruction);
    public void Accept(CmpRmReg8 instruction);
    public void Accept(CmpRmReg32 instruction);
    public void Accept(CmpRmReg16 instruction);
    public void Accept(CmpRegRm8 instruction);
    public void Accept(CmpRegRm32 instruction);
    public void Accept(CmpRegRm16 instruction);
    public void Accept(CmpAccImm8 instruction);
    public void Accept(CmpAccImm32 instruction);
    public void Accept(CmpAccImm16 instruction);
    public void Accept(IncReg16 instruction);
    public void Accept(IncReg32 instruction);
    public void Accept(DecReg16 instruction);
    public void Accept(DecReg32 instruction);
    public void Accept(PushReg16 instruction);
    public void Accept(PushReg32 instruction);
    public void Accept(PopReg16 instruction);
    public void Accept(PopReg32 instruction);
    public void Accept(Grp1Adc8 instruction);
    public void Accept(Grp1AdcSigned16 instruction);
    public void Accept(Grp1AdcSigned32 instruction);
    public void Accept(Grp1AdcUnsigned16 instruction);
    public void Accept(Grp1AdcUnsigned32 instruction);
    public void Accept(Grp1Add8 instruction);
    public void Accept(Grp1AddSigned16 instruction);
    public void Accept(Grp1AddSigned32 instruction);
    public void Accept(Grp1AddUnsigned16 instruction);
    public void Accept(Grp1AddUnsigned32 instruction);
    public void Accept(Grp1And8 instruction);
    public void Accept(Grp1AndSigned16 instruction);
    public void Accept(Grp1AndSigned32 instruction);
    public void Accept(Grp1AndUnsigned16 instruction);
    public void Accept(Grp1AndUnsigned32 instruction);
    public void Accept(Grp1Cmp8 instruction);
    public void Accept(Grp1CmpSigned16 instruction);
    public void Accept(Grp1CmpSigned32 instruction);
    public void Accept(Grp1CmpUnsigned16 instruction);
    public void Accept(Grp1CmpUnsigned32 instruction);
    public void Accept(Grp1Or8 instruction);
    public void Accept(Grp1OrSigned16 instruction);
    public void Accept(Grp1OrSigned32 instruction);
    public void Accept(Grp1OrUnsigned16 instruction);
    public void Accept(Grp1OrUnsigned32 instruction);
    public void Accept(Grp1Sbb8 instruction);
    public void Accept(Grp1SbbSigned16 instruction);
    public void Accept(Grp1SbbSigned32 instruction);
    public void Accept(Grp1SbbUnsigned16 instruction);
    public void Accept(Grp1SbbUnsigned32 instruction);
    public void Accept(Grp1Sub8 instruction);
    public void Accept(Grp1SubSigned16 instruction);
    public void Accept(Grp1SubSigned32 instruction);
    public void Accept(Grp1SubUnsigned16 instruction);
    public void Accept(Grp1SubUnsigned32 instruction);
    public void Accept(Grp1Xor8 instruction);
    public void Accept(Grp1XorSigned16 instruction);
    public void Accept(Grp1XorSigned32 instruction);
    public void Accept(Grp1XorUnsigned16 instruction);
    public void Accept(Grp1XorUnsigned32 instruction);
    public void Accept(MovRmReg8 instruction);
    public void Accept(MovRmReg16 instruction);
    public void Accept(MovRmReg32 instruction);
    public void Accept(PushF16 instruction);
    public void Accept(PushF32 instruction);
    public void Accept(PopF16 instruction);
    public void Accept(PopF32 instruction);
    public void Accept(MovMoffsAcc8 instruction);
    public void Accept(MovMoffsAcc16 instruction);
    public void Accept(MovMoffsAcc32 instruction);
    public void Accept(MovRegImm8 instruction);
    public void Accept(MovRegImm16 instruction);
    public void Accept(MovRegImm32 instruction);
    public void Accept(MovRmImm8 instruction);
    public void Accept(MovRmImm16 instruction);
    public void Accept(MovRmImm32 instruction);
    public void Accept(JmpNearImm16 instruction);
    public void Accept(JmpNearImm8 instruction);
    public void Accept(Hlt instruction);
    public void Accept(Grp45RmInc8 instruction);
    public void Accept(Grp45RmDec8 instruction);
    public void Accept(Grp4Callback instruction);
    public void Accept(Grp45RmInc32 instruction);
    public void Accept(Grp45RmInc16 instruction);
    public void Accept(Grp45RmDec32 instruction);
    public void Accept(Grp45RmDec16 instruction);
    public void Accept(Grp5RmCallNear instruction);
    public void Accept(Grp5RmCallFar instruction);
    public void Accept(Grp5RmJumpNear instruction);
    public void Accept(Grp5RmJumpFar instruction);
    public void Accept(Grp5RmPush32 instruction);
    public void Accept(Grp5RmPush16 instruction);
    public void Accept(DiscriminatedNode discriminatedNode);
}
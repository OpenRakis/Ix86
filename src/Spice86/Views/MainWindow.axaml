<Window xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="using:Spice86.ViewModels"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:converters="clr-namespace:Spice86.Converters"
		xmlns:views="clr-namespace:Spice86.Views"
		mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		x:Class="Spice86.Views.MainWindow"
		Icon="/Assets/Spice86.ico"
		Title="{Binding MainTitle}"
		x:CompileBindings="True" x:DataType="vm:MainWindowViewModel"
		Width="1024"
		Height="768"
		WindowStartupLocation="CenterScreen"
		CanResize="True">
	<Window.Resources>
		<converters:CountToBooleanConverter x:Key="CountToBooleanConverter" />
		<converters:ClassToTypeStringConverter x:Key="ClassToTypeStringConverter" />
		<converters:NullToDoubleConverter x:Key="NullToDoubleConverter" />
	</Window.Resources>
	<Design.DataContext>
		<vm:MainWindowViewModel />
	</Design.DataContext>
	<Grid RowDefinitions="Auto,*,Auto">
		<Menu Focusable="False" Grid.Row="0" IsVisible="{Binding !IsDialogVisible}">
			<MenuItem Name="Menu" Header="Program">
				<MenuItem Header="Start Executable..." Command="{Binding StartExecutableCommand}"></MenuItem>
				<MenuItem Header="Debug Executable..." Command="{Binding DebugExecutableCommand}" ToolTip.Tip="Starts the executable paused, to be used with GDB"></MenuItem>
				<Separator IsVisible="{Binding MostRecentlyUsed.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter=0}" />
				<MenuItem Command="{Binding StartMostRecentlyUsed}" Header="{Binding FirstProgramName}" IsVisible="{Binding MostRecentlyUsed.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter=0}" CommandParameter="0" />
				<MenuItem Command="{Binding StartMostRecentlyUsed}" Header="{Binding SecondProgramName}" IsVisible="{Binding MostRecentlyUsed.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter=1}" CommandParameter="1" />
				<MenuItem Command="{Binding StartMostRecentlyUsed}" Header="{Binding ThirdProgramName}" IsVisible="{Binding MostRecentlyUsed.Count, Converter={StaticResource CountToBooleanConverter}, ConverterParameter=2}" CommandParameter="2" />
			</MenuItem>
			<MenuItem Header="Debug">
				<MenuItem Header="Debug Window" IsEnabled="{Binding IsMachineRunning}" Command="{Binding ShowDebugWindowCommand}" />
				<MenuItem Header="Color Palette" IsEnabled="{Binding IsMachineRunning}" Command="{Binding ShowColorPaletteCommand}" />
				<MenuItem Header="Performance" IsEnabled="{Binding IsMachineRunning}" Command="{Binding ShowPerformanceCommand}" />
				<MenuItem Header="{Binding CurrentLogLevel, StringFormat='Log Level ({0})'}">
					<MenuItem Header="Silent" Command="{Binding SetLogLevelToSilent}" />
					<MenuItem Header="Verbose" Command="{Binding SetLogLevelToVerbose}" />
					<MenuItem Header="Debug" Command="{Binding SetLogLevelToDebug}" />
					<MenuItem Header="Information" Command="{Binding SetLogLevelToInformation}" />
					<MenuItem Header="Warning" Command="{Binding SetLogLevelToWarning}" />
					<MenuItem Header="Error" Command="{Binding SetLogLevelToError}" />
					<MenuItem Header="Fatal" Command="{Binding SetLogLevelToFatal}" />
				</MenuItem>
				<MenuItem Header="Dump emulator state to directory..." IsEnabled="{Binding IsMachineRunning}" Command="{Binding DumpEmulatorStateToFileCommand}" />
			</MenuItem>
			<MenuItem Header="Video" IsEnabled="{Binding IsMachineRunning}">
				<MenuItem>
					<MenuItem.Header>
						<Grid ColumnDefinitions="Auto,Auto">
							<Label Grid.Column="0" Content="Scale" HorizontalContentAlignment="Center" />
							<NumericUpDown Grid.Column="1" Text="{Binding Scale}" Margin="5,0,0,0" />
						</Grid>
					</MenuItem.Header>
				</MenuItem>
				<MenuItem>
					<MenuItem.Header>
						<CheckBox Content="Show Cursor" IsChecked="{Binding ShowCursor}" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Command="{Binding SaveBitmapCommand}">
					<MenuItem.Header>
						<Label Content="Save Bitmap" />
					</MenuItem.Header>
				</MenuItem>
			</MenuItem>
		</Menu>
		<WrapPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" Orientation="Horizontal">
			<Button Focusable="False" Content="Pauseï¸Ž" Command="{Binding PauseCommand}" HotKey="Alt+Pause" IsVisible="{Binding !IsPaused}" />
			<Button Focusable="False" Content="Continue" Command="{Binding PlayCommand}" HotKey="F5" IsVisible="{Binding IsPaused}" />
			<Label Focusable="False" VerticalAlignment="Center" Content="Time Modifier" />
			<NumericUpDown Focusable="False" Margin="5,0,0,0" Text="{Binding TimeMultiplier, FallbackValue=1, Converter={StaticResource NullToDoubleConverter}}" Minimum="1" />
			<Button Focusable="False" Margin="5,0,0,0" Content="Reset" HotKey="F4" Command="{Binding ResetTimeMultiplierCommand}" />
		</WrapPanel>
		<WrapPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" IsVisible="{Binding IsPerformanceVisible}">
			<views:PerformanceView DataContext="{Binding PerformanceViewModel}" />
		</WrapPanel>
		<Viewbox Grid.Row="1">
			<LayoutTransformControl>
				<LayoutTransformControl.RenderTransform>
					<ScaleTransform
						ScaleX="{Binding Scale}"
						ScaleY="{Binding Scale}">
					</ScaleTransform>
				</LayoutTransformControl.RenderTransform>
				<Viewbox>
					<Image x:Name="Image"
					       RenderOptions.BitmapInterpolationMode="None"
					       Cursor="{Binding Cursor}"
					       Source="{Binding Bitmap}" />
				</Viewbox>
			</LayoutTransformControl>
		</Viewbox>
		<Border Grid.Row="2">
			<WrapPanel Orientation="Horizontal">
				<TextBlock Text="{Binding StatusMessage}" />
				<TextBlock Margin="5,0,0,0" Text="{Binding AsmOverrideStatus}" />
				<TextBlock Margin="5,0,0,0" Text="{Binding Configuration.GdbPort, StringFormat='GDB port: {0}'}" IsVisible="{Binding Configuration.GdbPort, Converter={StaticResource CountToBooleanConverter}, ConverterParameter=0}" />
			</WrapPanel>
		</Border>
		<Grid Grid.Row="0" Grid.RowSpan="3" IsVisible="{Binding IsDialogVisible, FallbackValue=False}">
			<Border Background="{StaticResource SystemChromeBlackHighColor}" Opacity="0.5" />
			<WrapPanel Background="{Binding $parent[Window].Background}" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
				<Grid RowDefinitions="Auto,*,Auto" ColumnDefinitions="Auto,*,Auto">
					<Label Grid.Row="0" HorizontalAlignment="Center" FontWeight="Bold" Grid.ColumnSpan="3" Content="An unhandled exception occured" />
					<WrapPanel Grid.Column="0" Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="3">
						<Grid RowDefinitions="Auto,*" ColumnDefinitions="Auto,*">
							<Button Grid.Row="0" Grid.Column="0" Content="Copy To Clipboard" Command="{Binding CopyToClipboardCommand}" />
							<Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
								<Label FontWeight="Bold" Grid.Row="0" Grid.Column="0">Message</Label>
								<TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.Column="1" Text="{Binding Exception.Message}" />
								<Label FontWeight="Bold" Grid.Row="1" Grid.Column="0">Target Site</Label>
								<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Exception.TargetSite.Name}" />
								<Label FontWeight="Bold" Grid.Row="2" Grid.Column="0">Exception Type</Label>
								<TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Exception, Converter={StaticResource ClassToTypeStringConverter}}" />
							</Grid>
						</Grid>
						<Expander Header="Stack Trace" IsExpanded="False">
							<StackPanel Orientation="Vertical">
								<TextBlock TextWrapping="Wrap" Text="{Binding Exception.StackTrace, Converter={StaticResource ClassToTypeStringConverter}}" />
							</StackPanel>
						</Expander>
					</WrapPanel>
					<DockPanel Grid.Row="2" Grid.Column="2">
						<Button Content="OK" DockPanel.Dock="Left" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding ClearDialogCommand}" />
						<Button Content="Debug..." DockPanel.Dock="Right" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding ShowDebugWindowOnErrorCommand}" />
					</DockPanel>
				</Grid>
			</WrapPanel>
		</Grid>
	</Grid>
</Window>